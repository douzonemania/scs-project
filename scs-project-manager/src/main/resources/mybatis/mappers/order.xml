<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="order">
	<select id="findSettleByDate" parameterType="map" resultType="ordersettlevo">
	<choose>
		<when test="startDate  =='' and endDate == '' ">
			<![CDATA[
				select member.id as 'id',
						shop_order.order_number as orderNumber,
						shop_order.reg_date as 'regDate',
						truncate(sum(item.now_price -(item.now_price * sale / 100)),0) as 'purchasePrice',
						truncate((sum(item.now_price -(item.now_price * sale / 100)) - sum(item.sup_price)),0) as 'marginPrice'
				  from mall.item, mall.stock, mall.order_item, mall.shop_order, mall.member
				 where item.no = stock.item_no
				   and stock.no = order_item.stock_no
				   and order_item.order_no = shop_order.no
				   and shop_order.member_no = member.no
			   group by shop_order.order_number
				   limit ${size} offset #{offset}
			]]>
		</when>
		<otherwise>
			<![CDATA[
				select member.id as 'id',
						shop_order.order_number as orderNumber,
						shop_order.reg_date as 'regDate',
						truncate(sum(item.now_price -(item.now_price * sale / 100)),0) as 'purchasePrice',
						truncate((sum(item.now_price -(item.now_price * sale / 100)) - sum(item.sup_price)),0) as 'marginPrice'
				  from mall.item, mall.stock, mall.order_item, mall.shop_order, mall.member
				 where item.no = stock.item_no
				   and stock.no = order_item.stock_no
				   and order_item.order_no = shop_order.no
				   and shop_order.member_no = member.no
				   and shop_order.reg_date >= #{startDate } and shop_order.reg_date <= #{endDate }
			   group by shop_order.order_number
				 limit ${size} offset #{offset}
			]]>
		</otherwise>
	</choose>
	</select>
	
	<select id="countSettleList" parameterType="map" resultType="int">
			<choose>
				<when test='startDate  == "" and endDate == "" '>
					<![CDATA[
						select count(*) from (select shop_order.order_number as orderNumber
						  from mall.item, mall.stock, mall.order_item, mall.shop_order, mall.member
						 where item.no = stock.item_no
						   and stock.no = order_item.stock_no
						   and order_item.order_no = shop_order.no
						   and shop_order.member_no = member.no
                           group by shop_order.order_number) a;
					]]>
				</when>
				<otherwise>
					<![CDATA[
						select count(*) from (select shop_order.order_number as orderNumber
						  from mall.item, mall.stock, mall.order_item, mall.shop_order, mall.member
						 where item.no = stock.item_no
						   and stock.no = order_item.stock_no
						   and order_item.order_no = shop_order.no
						   and shop_order.member_no = member.no
						   and shop_order.reg_date >= #{startDate } and shop_order.reg_date <= #{endDate }
                           group by shop_order.order_number) a;
						   
						   
					]]>
				</otherwise>
			</choose>
			
	</select>
	
	<select id="findTotalPrice" parameterType="map" resultType="int">
	<choose>
		<when test="startDate  =='' and endDate == '' ">
			<![CDATA[
				select truncate(sum(item.now_price -(item.now_price * sale / 100)),0) as 'totalPrice'
				  from ${db}.item, ${db}.stock, ${db}.order_item, ${db}.shop_order, ${db}.member
				 where item.no = stock.item_no 
				   and stock.no = order_item.stock_no
				   and order_item.order_no = shop_order.no
				   and shop_order.member_no = member.no
			]]>
		</when>
		<otherwise>
			<![CDATA[
				select truncate(sum(item.now_price -(item.now_price * sale / 100)),0) as 'totalPrice'
				  from ${db}.item, ${db}.stock, ${db}.order_item, ${db}.shop_order, ${db}.member
				 where item.no = stock.item_no 
				   and stock.no = order_item.stock_no
				   and order_item.order_no = shop_order.no
				   and shop_order.member_no = member.no
				   and shop_order.reg_date >= #{startDate } and shop_order.reg_date <= #{endDate }
			]]>
		</otherwise>
	</choose>
	</select>
	
	<select id="findTotalMargin" parameterType="map" resultType="int">
	<choose>
		<when test="startDate  =='' and endDate == '' ">
			<![CDATA[
				select truncate((sum(item.now_price -(item.now_price * sale / 100)) - sum(item.sup_price)),0) as 'totalMargin'
				  from ${db}.item, ${db}.stock, ${db}.order_item, ${db}.shop_order, ${db}.member
				 where item.no = stock.item_no 
				   and stock.no = order_item.stock_no
				   and order_item.order_no = shop_order.no
				   and shop_order.member_no = member.no
			]]>
		</when>
		<otherwise>
			<![CDATA[
				select truncate((sum(item.now_price -(item.now_price * sale / 100)) - sum(item.sup_price)),0) as 'totalMargin'
				  from ${db}.item, ${db}.stock, ${db}.order_item, ${db}.shop_order, ${db}.member
				 where item.no = stock.item_no 
				   and stock.no = order_item.stock_no
				   and order_item.order_no = shop_order.no
				   and shop_order.member_no = member.no
				   and shop_order.reg_date >= #{startDate } and shop_order.reg_date <= #{endDate }
			]]>
		</otherwise>
	</choose>
	</select>

	<select id="findDeliveryByDate" parameterType="map" resultType="orderdeliveryvo">
			<choose>
				<when test='(startDate  == "" and endDate == "" ) and (option="" and keyword="" ) '>
					<![CDATA[
						select shop_order.no as 'no', item.name as 'name', DATE_FORMAT(shop_order.reg_date, '%Y-%m-%d') as 'regDate', shop_order.order_number as 'orderNumber', member.id as 'id', shop_order.statement as 'status'
						  from ${db}.item, ${db}.stock, ${db}.order_item, ${db}.shop_order, ${db}.member
						 where item.no = stock.item_no 
						   and stock.no = order_item.stock_no
						   and order_item.order_no = shop_order.no
						   and shop_order.member_no = member.no
						   group by 1
						   limit ${size} offset #{offset}
					]]>
				</when>
				<when test='option != "" and keyword=""  '>
					<![CDATA[
						select shop_order.no as 'no', item.name as 'name', DATE_FORMAT(shop_order.reg_date, '%Y-%m-%d') as 'regDate', shop_order.order_number as 'orderNumber', member.id as 'id', shop_order.statement as 'status'
						  from ${db}.item, ${db}.stock, ${db}.order_item, ${db}.shop_order, ${db}.member
						 where item.no = stock.item_no 
						   and stock.no = order_item.stock_no
						   and order_item.order_no = shop_order.no
						   and shop_order.member_no = member.no
						   and shop_order.reg_date >= #{startDate } and shop_order.reg_date <= #{endDate }
						   group by 1
						   limit ${size} offset #{offset}
					]]>
				</when>
				<when test='startDate  == "" and endDate == "" '>
					<![CDATA[
						select shop_order.no as 'no', item.name as 'name', DATE_FORMAT(shop_order.reg_date, '%Y-%m-%d') as 'regDate', shop_order.order_number as 'orderNumber', member.id as 'id', shop_order.statement as 'status'
						  from ${db}.item, ${db}.stock, ${db}.order_item, ${db}.shop_order, ${db}.member
						 where item.no = stock.item_no 
						   and stock.no = order_item.stock_no
						   and order_item.order_no = shop_order.no
						   and shop_order.member_no = member.no
						   and #{option} like '%${keyword}%'
						   group by 1
						   limit ${size} offset #{offset}
					]]>
				</when>
				<otherwise>
					<![CDATA[
						select shop_order.no as 'no', item.name as 'name', DATE_FORMAT(shop_order.reg_date, '%Y-%m-%d') as 'regDate', shop_order.order_number as 'orderNumber', member.id as 'id', shop_order.statement as 'status'
						  from ${db}.item, ${db}.stock, ${db}.order_item, ${db}.shop_order, ${db}.member
						 where item.no = stock.item_no 
						   and stock.no = order_item.stock_no
						   and order_item.order_no = shop_order.no
						   and shop_order.member_no = member.no
						   and shop_order.reg_date >= #{startDate } and shop_order.reg_date <= #{endDate }
						   and #{option} like '%${keyword}%'
						   group by 1
						   limit ${size} offset #{offset}
					]]>
				</otherwise>
			</choose>
	</select>
	
	<select id="countDeliveryList" parameterType="map" resultType="int">
			<choose>
<when test='(startDate  == "" and endDate == "" ) and (option="" and keyword="" ) '>
					<![CDATA[
						select count(*) as 'count'
						  from ${db}.item, ${db}.stock, ${db}.order_item, ${db}.shop_order, ${db}.member
						 where item.no = stock.item_no 
						   and stock.no = order_item.stock_no
						   and order_item.order_no = shop_order.no
						   and shop_order.member_no = member.no
					]]>
				</when>
				<when test='option != "" and keyword=""  '>
					<![CDATA[
						select count(*) as 'count'
						  from ${db}.item, ${db}.stock, ${db}.order_item, ${db}.shop_order, ${db}.member
						 where item.no = stock.item_no 
						   and stock.no = order_item.stock_no
						   and order_item.order_no = shop_order.no
						   and shop_order.member_no = member.no
						   and shop_order.reg_date >= #{startDate } and shop_order.reg_date <= #{endDate }
					]]>
				</when>
				<when test='startDate  == "" and endDate == "" '>
					<![CDATA[
						select count(*) as 'count'
						  from ${db}.item, ${db}.stock, ${db}.order_item, ${db}.shop_order, ${db}.member
						 where item.no = stock.item_no 
						   and stock.no = order_item.stock_no
						   and order_item.order_no = shop_order.no
						   and shop_order.member_no = member.no
						   and #{option} like '%${keyword}%'
					]]>
				</when>
				<otherwise>
					<![CDATA[
						select count(*) as 'count'
						  from ${db}.item, ${db}.stock, ${db}.order_item, ${db}.shop_order, ${db}.member
						 where item.no = stock.item_no 
						   and stock.no = order_item.stock_no
						   and order_item.order_no = shop_order.no
						   and shop_order.member_no = member.no
						   and shop_order.reg_date >= #{startDate } and shop_order.reg_date <= #{endDate }
						   and #{option } like '%${keyword }%'
					]]>
				</otherwise>
			</choose>
	</select>
	
	<select id="findDeliveryByNo" parameterType="map" resultType="orderdeliveryvo">
		<![CDATA[
			select shop_order.no as 'no', item.name as 'name', DATE_FORMAT(shop_order.reg_date, '%Y-%m-%d') as 'regDate', shop_order.order_number as 'orderNumber', member.id as 'id', shop_order.statement as 'status'
			  from ${db}.item, ${db}.stock, ${db}.order_item, ${db}.shop_order, ${db}.member
			 where item.no = stock.item_no 
			   and stock.no = order_item.stock_no
			   and order_item.order_no = shop_order.no
			   and shop_order.member_no = member.no
			   and shop_order.no = #{no }
	
		]]>
	</select>
	<update id="updateStatus" parameterType="map">
		<![CDATA[
			update ${db}.shop_order
			   set statement = #{status }
			 where shop_order.no = #{no }
		
		]]>
	</update>
	
	<select id="findStatement" parameterType="map" resultType="string">
		<![CDATA[
			select statement as 'status'
			  from ${db }.shop_order
			 where no = #{no };
		
		]]>
		
	</select>

</mapper>