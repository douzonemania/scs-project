<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="order">
	<select id="findSettleByDate" parameterType="map" resultType="ordersettlevo">
	<choose>
		<when test="startDate  =='' and endDate == '' ">
			<![CDATA[
				select member.id as 'id',
						shop_order.order_number as orderNumber,
						DATE_FORMAT(shop_order.reg_date, '%Y-%m-%d %H:%i:%s') as 'regDate',
						truncate(sum(item.now_price -(item.now_price * sale / 100)),0) as 'purchasePrice',
						truncate((sum(item.now_price -(item.now_price * sale / 100)) - sum(item.sup_price)),0) as 'marginPrice'
				  from ${db}.item, ${db}.stock, ${db}.order_item, ${db}.shop_order, ${db}.member
				 where item.no = stock.item_no
				   and stock.no = order_item.stock_no
				   and order_item.order_no = shop_order.no
				   and shop_order.member_no = member.no
			   group by shop_order.order_number
				ORDER BY shop_order.reg_date desc limit ${size} offset #{offset}
			]]>
		</when>
		<otherwise>
			<![CDATA[
				select member.id as 'id',
						shop_order.order_number as orderNumber,
						DATE_FORMAT(shop_order.reg_date, '%Y-%m-%d %H:%i:%s') as 'regDate',
						truncate(sum(item.now_price -(item.now_price * sale / 100)),0) as 'purchasePrice',
						truncate((sum(item.now_price -(item.now_price * sale / 100)) - sum(item.sup_price)),0) as 'marginPrice'
				  from ${db}.item, ${db}.stock, ${db}.order_item, ${db}.shop_order, ${db}.member
				 where item.no = stock.item_no
				   and stock.no = order_item.stock_no
				   and order_item.order_no = shop_order.no
				   and shop_order.member_no = member.no
				   and shop_order.reg_date >= #{startDate } and shop_order.reg_date <= #{endDate }
			   group by shop_order.order_number
				ORDER BY shop_order.reg_date desc limit ${size} offset #{offset}
			]]>
		</otherwise>
	</choose>
	</select>
	
	<select id="countSettleList" parameterType="map" resultType="int">
			<choose>
				<when test='startDate  == "" and endDate == "" '>
					<![CDATA[
						select count(*) from (select shop_order.order_number as orderNumber
						  from ${db}.item, ${db}.stock, ${db}.order_item, ${db}.shop_order, ${db}.member
						 where item.no = stock.item_no
						   and stock.no = order_item.stock_no
						   and order_item.order_no = shop_order.no
						   and shop_order.member_no = member.no
                           group by shop_order.order_number) a;
					]]>
				</when>
				<otherwise>
					<![CDATA[
						select count(*) from (select shop_order.order_number as orderNumber
						  from ${db}.item, ${db}.stock, ${db}.order_item, ${db}.shop_order, ${db}.member
						 where item.no = stock.item_no
						   and stock.no = order_item.stock_no
						   and order_item.order_no = shop_order.no
						   and shop_order.member_no = member.no
						   and shop_order.reg_date >= #{startDate } and shop_order.reg_date <= #{endDate }
                           group by shop_order.order_number) a;
						   
						   
					]]>
				</otherwise>
			</choose>
			
	</select>
	
	<select id="findTotalPrice" parameterType="map" resultType="int">
	<choose>
		<when test="startDate  =='' and endDate == '' ">
			<![CDATA[
				select ifnull(truncate(sum(item.now_price -(item.now_price * sale / 100)),0), 0) as 'totalPrice'
				  from ${db}.item, ${db}.stock, ${db}.order_item, ${db}.shop_order, ${db}.member
				 where item.no = stock.item_no 
				   and stock.no = order_item.stock_no
				   and order_item.order_no = shop_order.no
				   and shop_order.member_no = member.no
			]]>
		</when>
		<otherwise>
			<![CDATA[
				select ifnull(truncate(sum(item.now_price -(item.now_price * sale / 100)),0), 0) as 'totalPrice'
				  from ${db}.item, ${db}.stock, ${db}.order_item, ${db}.shop_order, ${db}.member
				 where item.no = stock.item_no 
				   and stock.no = order_item.stock_no
				   and order_item.order_no = shop_order.no
				   and shop_order.member_no = member.no
				   and shop_order.reg_date >= #{startDate } and shop_order.reg_date <= #{endDate }
			]]>
		</otherwise>
	</choose>
	</select>
	
	<select id="findTotalMargin" parameterType="map" resultType="int">
	<choose>
		<when test="startDate  =='' and endDate == '' ">
			<![CDATA[
				select ifnull(truncate((sum(item.now_price -(item.now_price * sale / 100)) - sum(item.sup_price)),0), 0) as 'totalMargin'
				  from ${db}.item, ${db}.stock, ${db}.order_item, ${db}.shop_order, ${db}.member
				 where item.no = stock.item_no 
				   and stock.no = order_item.stock_no
				   and order_item.order_no = shop_order.no
				   and shop_order.member_no = member.no
			]]>
		</when>
		<otherwise>
			<![CDATA[
				select ifnull(truncate((sum(item.now_price -(item.now_price * sale / 100)) - sum(item.sup_price)),0), 0) as 'totalMargin'
				  from ${db}.item, ${db}.stock, ${db}.order_item, ${db}.shop_order, ${db}.member
				 where item.no = stock.item_no 
				   and stock.no = order_item.stock_no
				   and order_item.order_no = shop_order.no
				   and shop_order.member_no = member.no
				   and shop_order.reg_date >= #{startDate } and shop_order.reg_date <= #{endDate }
			]]>
		</otherwise>
	</choose>
	</select>

	<select id="findDeliveryByDate" parameterType="map" resultType="orderdeliveryvo">
			<choose>
				<when test='(startDate  == "" and endDate == "" ) and (option=="" and keyword=="" ) '>
					<![CDATA[
						select shop_order.no as 'no', item.name as 'name', count(order_item.order_no) as 'count', DATE_FORMAT(shop_order.reg_date, '%Y-%m-%d %H:%i:%s') as 'regDate', shop_order.order_number as 'orderNumber', member.id as 'id', shop_order.statement as 'statement'
						  from ${db}.item, ${db}.stock, ${db}.order_item, ${db}.shop_order, ${db}.member
						 where item.no = stock.item_no 
						   and stock.no = order_item.stock_no
						   and order_item.order_no = shop_order.no
						   and shop_order.member_no = member.no
						   group by 1
						   ORDER BY no desc limit ${size } offset #{offset }
					]]>
				</when>
				<when test='option != "" and keyword==""  '>
					<![CDATA[
						select shop_order.no as 'no', item.name as 'name', count(order_item.order_no) as 'count', DATE_FORMAT(shop_order.reg_date, '%Y-%m-%d %H:%i:%s') as 'regDate', shop_order.order_number as 'orderNumber', member.id as 'id', shop_order.statement as 'statement'
						  from ${db}.item, ${db}.stock, ${db}.order_item, ${db}.shop_order, ${db}.member
						 where item.no = stock.item_no 
						   and stock.no = order_item.stock_no
						   and order_item.order_no = shop_order.no
						   and shop_order.member_no = member.no
						   and shop_order.reg_date >= #{startDate } and shop_order.reg_date <= #{endDate }
						   group by 1
						   ORDER BY no desc
						   limit ${size } offset #{offset }
					]]>
				</when>
				<when test='startDate  == "" and endDate == "" '>
					<![CDATA[
						select shop_order.no as 'no', item.name as 'name', count(order_item.order_no) as 'count', DATE_FORMAT(shop_order.reg_date, '%Y-%m-%d %H:%i:%s') as 'regDate', shop_order.order_number as 'orderNumber', member.id as 'id', shop_order.statement as 'statement'
						  from ${db}.item, ${db}.stock, ${db}.order_item, ${db}.shop_order, ${db}.member
						 where item.no = stock.item_no
						   and stock.no = order_item.stock_no
						   and order_item.order_no = shop_order.no
						   and shop_order.member_no = member.no
						   and ${option } like '%${keyword }%'
						   group by 1
						   ORDER BY no desc
						   limit ${size } offset #{offset }
					]]>
				</when>
				<otherwise>
					<![CDATA[
						select shop_order.no as 'no', item.name as 'name',  count(order_item.order_no) as 'count', DATE_FORMAT(shop_order.reg_date, '%Y-%m-%d %H:%i:%s') as 'regDate', shop_order.order_number as 'orderNumber', member.id as 'id', shop_order.statement as 'statement'
						  from ${db}.item, ${db}.stock, ${db}.order_item, ${db}.shop_order, ${db}.member
						 where item.no = stock.item_no 
						   and stock.no = order_item.stock_no
						   and order_item.order_no = shop_order.no
						   and shop_order.member_no = member.no
						   and shop_order.reg_date >= #{startDate } and shop_order.reg_date <= #{endDate }
						   and ${option } like '%${keyword }%'
						   group by 1
						   ORDER BY no desc
						   limit ${size } offset #{offset }
					]]>
				</otherwise>
			</choose>
	</select>
	
	<select id="countDeliveryList" parameterType="map" resultType="int">
			<choose>
				<when test='(startDate  == "" and endDate == "" ) and (option=="" and keyword=="" ) '>
						<![CDATA[
							select count(*) 
						      from (select shop_order.no
										  from ${db}.item, ${db}.stock, ${db}.order_item, ${db}.shop_order, ${db}.member
										 where item.no = stock.item_no
										   and stock.no = order_item.stock_no
										   and order_item.order_no = shop_order.no
										   and shop_order.member_no = member.no 
									   group by 1) a
							   
						]]>
					</when>
				<when test='option != "" and keyword==""  '>
					<![CDATA[
						select count(*) 
						  from (select shop_order.no
								  from ${db}.item, ${db}.stock, ${db}.order_item, ${db}.shop_order, ${db}.member
								 where item.no = stock.item_no 
								   and stock.no = order_item.stock_no
								   and order_item.order_no = shop_order.no
								   and shop_order.member_no = member.no
								   and shop_order.reg_date >= #{startDate } and shop_order.reg_date <= #{endDate }
							    group by 1) a
					]]>
				</when>
				<when test='startDate  == "" and endDate == "" '>
					<![CDATA[
						select count(*) from (select shop_order.no
						  from ${db}.item, ${db}.stock, ${db}.order_item, ${db}.shop_order, ${db}.member
						 where item.no = stock.item_no
						   and stock.no = order_item.stock_no
						   and order_item.order_no = shop_order.no
						   and shop_order.member_no = member.no
						   and ${option} like '%${keyword}%'
						    group by 1) a
					]]>
				</when>
				<otherwise>
					<![CDATA[
						select count(*) from (select shop_order.no
						  from ${db}.item, ${db}.stock, ${db}.order_item, ${db}.shop_order, ${db}.member
						 where item.no = stock.item_no 
						   and stock.no = order_item.stock_no
						   and order_item.order_no = shop_order.no
						   and shop_order.member_no = member.no
						   and shop_order.reg_date >= #{startDate } and shop_order.reg_date <= #{endDate }
						   and ${option } like '%${keyword }%'
						    group by 1) a
					]]>
				</otherwise>
			</choose>
	</select>
	
	<select id="findDeliveryByNo" parameterType="map" resultType="orderdeliveryvo">
		<![CDATA[
			select shop_order.no as 'no', item.name as 'name', DATE_FORMAT(shop_order.reg_date, '%Y-%m-%d') as 'regDate', shop_order.order_number as 'orderNumber', member.id as 'id', shop_order.statement as 'statement'
			  from ${db}.item, ${db}.stock, ${db}.order_item, ${db}.shop_order, ${db}.member
			 where item.no = stock.item_no 
			   and stock.no = order_item.stock_no
			   and order_item.order_no = shop_order.no
			   and shop_order.member_no = member.no
			   and shop_order.no = #{no }
			   ORDER BY no desc
	
		]]>
	</select>
	<update id="updateStatus" parameterType="map">
		<![CDATA[
			update ${db}.shop_order
			   set statement = #{statement }
			 where shop_order.no = #{no }
		
		]]>
	</update>
	
	<select id="findStatement" parameterType="map" resultType="string">
		<![CDATA[
			select statement as 'statement'
			  from ${db }.shop_order
			 where no = #{no };
		
		]]>
	</select>
	
	<select id="reviewListCount" parameterType="map" resultType="int">
			<choose>
				<when test='option=="" and keyword==""'>
					<![CDATA[
						select count(*)
						  from ${db}.item_review i,
						  	   ${db}.member m
					     where i.member_no=m.no
					       and m.state='회원'
					]]>
				</when>
				<when test='option=="name"'>
					<![CDATA[
						select count(*)
						  from mall.item_review a, 
						   	   mall.item b, 
						   	   mall.member c
					 	 where a.item_no=b.no
			               and a.member_no=c.no
			               and c.state='회원'
			               and b.name like '%${keyword }%'
					]]>
				</when>
				<otherwise>
					<![CDATA[
						select count(*)
						  from ${db}.item_review i,
						  	   ${db}.member m
					     where i.member_no=m.no
					       and m.state='회원'
					       and ${option } like '%${keyword }%'
					]]>
				</otherwise>
			</choose>
	</select>

	<select id="reviewList" parameterType="map" resultType="itemreviewvo">	
		<![CDATA[
				select a.no, 
					   a.rate, 
					   a.title, 
					   content, 
					   image, 
					   a.reg_date as 'regDate',
					   a.color, 
					   a.size, 
					   b.name as 'itemName', 
					   c.id,
					   a.item_no as 'itemNo',
					   b.main_image as 'mainImage'
				  from ${db}.item_review a, 
				   	   ${db}.item b, 
				   	   ${db}.member c
			 	 where a.item_no=b.no
	               and a.member_no=c.no
	               and c.state='회원'
			  order by a.reg_date desc
			  limit ${size} offset #{offset}
		]]>
	</select>
	
	<select id="searchReviewList" parameterType="map" resultType="itemreviewvo">
		<choose>
			<when test='option=="name"'>
				<![CDATA[
						select a.no, 
							   a.rate, 
							   a.title, 
							   content, 
							   image, 
							   a.reg_date as 'regDate',
							   a.color, 
							   a.size, 
							   b.name as 'itemName', 
							   c.id,
							   a.item_no as 'itemNo',
							   b.main_image as 'mainImage'
						  from ${db}.item_review a, 
						   	   ${db}.item b, 
						   	   ${db}.member c
					 	 where a.item_no=b.no
			               and a.member_no=c.no
			               and c.state='회원'
			               and b.name like '%${keyword }%' 
					  order by a.reg_date desc
					  limit ${size} offset #{offset}
				]]>				
			</when>
			<otherwise>
				<![CDATA[
						select a.no, 
							   a.rate, 
							   a.title, 
							   content, 
							   image, 
							   a.reg_date as 'regDate',
							   a.color, 
							   a.size, 
							   b.name as 'itemName', 
							   c.id,
							   a.item_no as 'itemNo',
							   b.main_image as 'mainImage'
						  from ${db}.item_review a, 
						   	   ${db}.item b, 
						   	   ${db}.member c
					 	 where a.item_no=b.no
			               and a.member_no=c.no
			               and c.state='회원'
			               and ${option } like '%${keyword }%' 
					  order by a.reg_date desc
					  limit ${size} offset #{offset}
				]]>
			</otherwise>
		</choose>
	</select>

	<select id="getReviewByNo" parameterType="map" resultType="itemreviewvo">
		<![CDATA[
			 select a.no, 
					a.rate, 
					a.title, 
					content, 
					image, 
					a.reg_date as 'regDate',
					a.color, 
					a.size, 
					b.name as 'itemName', 
					c.id,
					a.item_no as 'itemNo',
					b.main_image as 'mainImage'
			   from ${db}.item_review a, ${db}.item b, ${db}.member c
              where a.item_no=b.no
              	and c.state='회원'
                and a.member_no=c.no
                and a.no=#{no}
		]]>
	</select>
	
	<delete id="delteReview">
		<![CDATA[
			delete from ${db}.item_review
			 	  where no=#{no}
		]]>
	</delete>

</mapper>