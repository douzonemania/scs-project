<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="member">
	<select id="memberList" parameterType="map" resultType="membervo">
		<![CDATA[
			select no,
				   id,
				   password,
				   phone_number as phoneNumber,
				   email,
				   reg_date as regDate,
				   type,
				   name,
				   state
			  from ${db}.member
			 where state='회원'
			 limit ${size} offset #{offset}
		]]>
	</select>
	
	<select id="searchMemberList" parameterType="map" resultType="membervo">
		<![CDATA[
			select no,
				   id,
				   password,
				   phone_number as phoneNumber,
				   email,
				   reg_date as regDate,
				   type,
				   name,
				   state
			  from ${db}.member
			 where state='회원'
			   and ${option} like '%${keyword}%'
			 limit ${size} offset #{offset}
		]]>
	</select>
	
	<select id="listCount" parameterType="map" resultType="int">
			<choose>
				<when test='option==""'>
					<![CDATA[
						select count(*)
						  from ${db}.member
						 where state='회원'
					]]>
				</when>
				<otherwise>
					<![CDATA[
						select count(*)
						  from ${db}.member
						 where state='회원'
						   and ${option} like '%${keyword}%'
					]]>
				</otherwise>
			</choose>
			
	</select>
	
	<select id="getMemberEmail" parameterType="map" resultType="string">
		<![CDATA[
			select email
			  from ${db}.member
			 where no = #{no}
		]]>
	</select>
	
	
	<select id="findBoardList" parameterType="map" resultType="boardvo">
		<![CDATA[
			select b.no,
				   b.category,
				   b.title,
				   b.contents,
				   b.member_no as memberNo,
				   b.reg_date as regDate,
				   b.reply_state as replyState,
				   m.id,
				   m.name,
				   m.state
			  from ${db}.board b, ${db}.member m
			 where b.member_no = m.no
			   and m.state='회원'
			 limit ${size} offset #{offset}
		]]>
	</select>
	
	<select id="findSearchBoardList" parameterType="map" resultType="boardvo">
		<![CDATA[
			select b.no,
				   b.category,
				   b.title,
				   b.contents,
				   b.member_no as memberNo,
				   b.reg_date as regDate,
				   b.reply_state as replyState,
				   m.id,
				   m.name,
				   m.state
			  from ${db}.board b, ${db}.member m
			 where b.member_no = m.no
			   and m.state = '회원'
			   and m.${option} like '%${keyword}%'
			 limit ${size} offset #{offset}
		]]>
	</select>
	
	<select id="boardListCount" parameterType="map" resultType="int">
			<choose>
				<when test='option==""'>
					<![CDATA[
						select count(*)
						  from ${db}.board b, ${db}.member m
						 where b.member_no = m.no
						   and m.state='회원'
					]]>
				</when>
				<otherwise>
					<![CDATA[
						select count(*)
						  from ${db}.board b, ${db}.member m
						 where b.member_no = m.no
						   and m.state='회원'
						   and ${option} like '%${keyword}%'
					]]>
				</otherwise>
			</choose>
	</select>
	
	<update id="deleteMember" parameterType="map">
		<![CDATA[
			update ${db}.member
			   set state = '탈퇴'
			 where no = #{no}
		]]>
	</update>
	
	<select id="findBoardByNo" parameterType="map" resultType="boardvo">
		<![CDATA[
			select no, 
			       category, 
			       title, 
	        	   contents, 
			       member_no as memberNo, 
			       reg_date as regDate, 
			       reply_state as replyState
	  	      from ${db}.board
	  	     where no=#{no}
		]]>
	</select>
	
	<delete id="deleteBoard" parameterType="map">
		<![CDATA[
			delete
			  from ${db}.board
			 where no=#{no}
			   and reply_state=false
		]]>
	</delete>
	
	<insert id="insertBoardReply" parameterType="map">
		<![CDATA[
			insert into ${db}.reply
			values(null, #{parentsNo}, #{contents}, now()) 
		]]>
	</insert>
	
	<select id="findReplyByParentsNo" parameterType="map" resultType="replyvo">
		<![CDATA[
			select no,
				   parents_no as parentsNo,
				   contents,
				   reg_date as regDate
			  from ${db}.reply
			 where parents_no=#{no} 
		]]>
	</select>
	
	<update id="setBoardReplyTrue" parameterType="map">
		<![CDATA[
			update ${db}.board
			   set reply_state=true
			 where no=#{no} 
		]]>
	</update>
	
	<select id="findNameByNo" parameterType="map" resultType="string">
		<![CDATA[
			select name
			  from ${db}.member
			 where no=#{no}		
		]]>
	</select>
	

</mapper>