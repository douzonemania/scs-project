<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="member">
	
	<select id="existUser" resultType="int" parameterType="map" >
		<![CDATA[
			select count(*) 
			from ${db}.member a
			where  a.id like #{id}
		]]>
	</select>
	
	<insert id="insertUser" parameterType="map">
		insert 
			into ${db}.member values(
			null,#{vo.id},#{vo.name},#{vo.password},#{vo.phoneNumber},
			#{vo.email},now(),'회원','일반')
	</insert> 

	<select id="findUser" parameterType = "map" resultType = "int">
				<![CDATA[
				select ifnull(no,0), ifnull(phone_number,0), ifnull(email,0)
				from ${db}.member
				where id like #{vo.id} and password like #{vo.password}
				]]>
	</select>

	<select id="findUserByNo" parameterType = "map" resultType = "membervo">
				<![CDATA[
				select no, id, password, phone_number as 'phoneNumber', email, name
				from ${db}.member
				where no = #{no}
				]]>
	</select>
	
	<select id="find" parameterType = "map" resultType = "itemvo">
				<![CDATA[
				select * 
				from ${id}.item a, ${id}.item b
				
				]]>
	</select>

	<select id="findIdByPhone" parameterType="map" resultType="string">
		<![CDATA[
			select id
			  from ${db}.member
			 where phone_number=#{phoneNum}
		]]>
	</select>
	
	<select id="findEmailById" parameterType="map" resultType="string">
		<![CDATA[
			select email
			  from ${db}.member
			 where id=#{id}
		]]>
	</select>
	
	<update id="updatePassword" parameterType="map">
		<![CDATA[
			update ${db}.member
			   set password=#{password}
			 where id=#{id}
		]]>
	</update>
	
	<update id="modPassword" parameterType="map">
		<![CDATA[
			update ${db}.member
			   set password=#{newPassword}
			 where id=#{id}
		]]>
	</update>
	
	<update id="modName" parameterType="map">
		<![CDATA[
			update ${db}.member
			   set name=#{name}
			 where id=#{id}
		]]>
	</update>
	
	<update id="modPhone" parameterType="map">
		<![CDATA[
			update ${db}.member
			   set phone_number=#{phone}
			 where id=#{id}
		]]>
	</update>
	
	<!-- my page 정은 -->
	
	<select id="getOrderList" parameterType="map" resultType="orderlistvo">
		<![CDATA[
			select DISTINCT a.no, a.name, a.main_image as 'image', b.no as 'stockNo', b.first_option as 'color', b.second_option as 'size',
	 		c.reg_date as 'regDate', c.order_number as 'orderNo', c.no as 'orderNoPrime',
			d.amount, d.total_price as 'totalPrice' , c.statement, d.re_state as reState
			from ${db}.item a, ${db}.stock b, ${db}.shop_order c, ${db}.order_item d, ${db}.member e
			where a.no=b.item_no and b.no=d.stock_no and c.no=d.order_no and c.member_no=#{no}
            limit 3
		]]>
	</select>
	
	<select id="getItemBoardList" parameterType="map" resultType="itemboardvo">
		<![CDATA[
			select b.no,
				   b.title,
				   b.contents,
				   b.reg_date as regDate,
				   b.member_no as memberNo,
				   b.item_no as itemNo,
				   b.reply_state as replyState,
                   i.code,
                   m.id,
                   i.main_image as mainImage,
                   i.name as itemName
			  from ${db}.item_board b,
				   ${db}.member m,
                   ${db}.item i
			 where b.member_no = m.no
               and b.item_no = i.no
			   and m.state='회원'
               and m.no=#{no}
             limit 5
		]]>
	</select>
	
	<select id="getQnaList" parameterType="map" resultType="boardvo">
		<![CDATA[
			select b.no,
				   b.category,
				   b.title,
				   b.contents,
				   b.member_no as memberNo,
				   b.reg_date as regDate,
				   b.reply_state as replyState,
				   m.id,
				   m.name
			  from ${db}.board b, ${db}.member m
			 where b.member_no = m.no
			   and m.state='회원'
			   and b.member_no=#{no}
			 limit 5
		]]>
	</select>
	
	<select id = "getCartList" parameterType="map" resultType="itemvo">
		<![CDATA[
			select a.no, a.code ,a.name ,a.now_price as 'nowPrice' ,a.sale , a.main_image as 'mainImage' , b.first_option as 'firstOption',b.firstOptionName, b.second_option as 'secondOption', b.secondOptionName, b.cartNo, b.amount ,b.stock
			from ${db}.item a, (
					select a.no,a.item_no,a.first_option,a.firstOptionName,a.second_option,a.secondOptionName,b.no as cartNo,b.amount,a.stock
					from (
							select a.no,a.item_no,a.first_option,a.firstOptionName, a.second_option,b.name as secondOptionName ,a.stock
							from (	select a.no , a.item_no,a.first_option, b.name as firstOptionName, a.second_option ,a.stock 
								 	from ${db}.stock a, ${db}.option b 
									where a.first_option= b.no) a , ${db}.option b 
							where a.second_option = b.no) a , ${db}.cart b 
					where a.no=b.stock_no and member_no=#{no}) b 
			where a.no=b.item_no
			limit 5
		]]>

	</select>
	
</mapper>